(module main (block 
  #! An example on how booleans can be built using atomics

  (import std.io _ printf)

  (attrs True (map (pair asSize 1)))
  (type True Atomic)

  (attrs True (map (pair asSize 0)))
  (type False Atomic)

  (type Bool (Enum True False))

  (sig true True)
  (val true atomic)

  (sig false False)
  (val false atomic)

  (sig boolToUInt (Fun Bool UInt))
  (val boolToUInt (fun pred
    (case pred 
      (match true (fun p 1))
      (match false (fun p 0)))))

  (sig printBoolAsUInt (Fun IO Bool IO))
  (val printBoolAsUInt (fun pred io
    (case pred
      (match true (fun t 
        (printf io "true as uint: {}\n" (boolToUInt t))))
      (match false (fun f 
        (printf io "false as uint: {}\n" (boolToUInt f)))))))

  (sig main (Fun IO IO))
  (val main (fun io (printBoolAsUInt false io)))))
